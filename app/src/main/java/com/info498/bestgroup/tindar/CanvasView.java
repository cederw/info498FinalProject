package com.info498.bestgroup.tindar;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.Base64;
import android.util.Log;
import android.view.View;

/**
 * Created by iguest on 6/8/15.
 */
public class CanvasView extends View {

    Bitmap drawing;

    public CanvasView(Context context, String encodedString) {
        super(context);
        this.drawing = StringToBitMap(encodedString);
       // String test = "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";
        Log.i("bitmap", encodedString);
        //Log.i("bitmapTest", test);
        //this.drawing = StringToBitMap(test);
       // this.drawing = StringToBitMap(encodedString);
    }

    public Bitmap StringToBitMap(String encodedString){
        try {
            byte [] encodeByte= Base64.decode(encodedString, Base64.DEFAULT);
            Bitmap bitmap= BitmapFactory.decodeByteArray(encodeByte, 0, encodeByte.length);
            drawing = bitmap;
            return bitmap;
        } catch(Exception e) {
            e.getMessage();
            return null;
        }
    }
    @Override
    public void onDraw (Canvas canvas){
        super.onDraw(canvas);
        canvas.drawColor(Color.WHITE);
        try {
            canvas.drawBitmap(drawing, (canvas.getWidth() / 2), (canvas.getHeight() / 2), null);
        } catch(Exception e){
            //sometimes the images are the wrong size
        }
    }
}